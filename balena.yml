# Balena application configuration for Ossuary Pi

# Application metadata
name: ossuary-pi
description: "Robust Kiosk & Captive Portal System for Raspberry Pi"
version: "1.0.0"
author: "Ossuary Pi Team"
repository: "https://github.com/yourusername/ossuary-pi"

# Balena cloud configuration
build-variables:
  - OSSUARY_VERSION=1.0.0
  - BUILD_DATE
  - GIT_COMMIT_SHA

# Fleet configuration
fleet:
  # Device type support
  device-types:
    - raspberrypi4-64
    - raspberrypi3-64
    - raspberrypi3
    - raspberrypi-zero-2-w-64

  # Default configuration
  configuration:
    # System configuration
    BALENA_HOST_CONFIG_gpu_mem: 128
    BALENA_HOST_CONFIG_dtoverlay: "vc4-kms-v3d"
    BALENA_HOST_CONFIG_max_usb_current: 1
    BALENA_HOST_CONFIG_hdmi_force_hotplug: 1
    BALENA_HOST_CONFIG_enable_uart: 1

    # Boot configuration for display
    BALENA_HOST_CONFIG_hdmi_group: 1
    BALENA_HOST_CONFIG_hdmi_mode: 16
    BALENA_HOST_CONFIG_hdmi_drive: 2

    # Disable overscan for clean display
    BALENA_HOST_CONFIG_disable_overscan: 1

    # Enable hardware acceleration
    BALENA_HOST_CONFIG_dtparam: "audio=on"

  # Environment variables
  environment:
    # Ossuary configuration
    OSSUARY_LOG_LEVEL: "INFO"
    OSSUARY_DEBUG: "false"
    OSSUARY_AUTO_UPDATE: "true"

    # Network configuration
    OSSUARY_AP_SSID: "ossuary-setup"
    OSSUARY_AP_PASSPHRASE: ""
    OSSUARY_AP_CHANNEL: "6"

    # Kiosk configuration
    OSSUARY_KIOSK_URL: ""
    OSSUARY_KIOSK_WEBGL: "true"
    OSSUARY_KIOSK_WEBGPU: "false"
    OSSUARY_KIOSK_REFRESH_INTERVAL: "0"

    # Portal configuration
    OSSUARY_PORTAL_TITLE: "Ossuary Setup"
    OSSUARY_PORTAL_THEME: "dark"

    # API configuration
    OSSUARY_API_ENABLED: "true"
    OSSUARY_API_AUTH_REQUIRED: "false"
    OSSUARY_API_AUTH_TOKEN: ""

    # Display configuration
    OSSUARY_DISPLAY_ROTATION: "0"
    OSSUARY_DISPLAY_RESOLUTION: "auto"
    OSSUARY_DISPLAY_BRIGHTNESS: "100"

# Data persistence
data:
  # Configuration data
  config:
    path: /data/ossuary/config
    description: "Application configuration files"

  # Application data
  data:
    path: /data/ossuary/data
    description: "Application data and databases"

  # Log data
  logs:
    path: /data/ossuary/logs
    description: "Application logs"

  # Network configuration
  network:
    path: /data/ossuary/network
    description: "NetworkManager configuration"

# Health checks
health-checks:
  - name: "portal-health"
    url: "http://localhost/health"
    interval: 30
    timeout: 10

  - name: "api-health"
    url: "http://localhost:8080/health"
    interval: 30
    timeout: 10

# Application lifecycle hooks
hooks:
  # Pre-start hook
  pre-start:
    - name: "system-preparation"
      command: |
        # Ensure data directories exist
        mkdir -p /data/ossuary/{config,data,logs,network}
        chown -R ossuary:ossuary /data/ossuary

  # Post-start hook
  post-start:
    - name: "service-verification"
      command: |
        # Wait for services to be ready
        sleep 30
        curl -f http://localhost/health || exit 1

  # Pre-stop hook
  pre-stop:
    - name: "graceful-shutdown"
      command: |
        # Signal graceful shutdown to services
        pkill -TERM -f "ossuary"
        sleep 10

# Supervisor configuration
supervisor:
  # Delta updates
  delta: true

  # Automatic updates
  update:
    strategy: "download-then-kill"
    handover-timeout: 60

  # VPN configuration
  vpn:
    enabled: false

# Security configuration
security:
  # Disable unnecessary services
  services:
    ssh:
      enabled: false
    bluetooth:
      enabled: false

  # Firewall rules
  firewall:
    rules:
      - port: 22
        protocol: tcp
        action: deny
      - port: 80
        protocol: tcp
        action: allow
      - port: 443
        protocol: tcp
        action: allow
      - port: 8080
        protocol: tcp
        action: allow
        source: "local"

# Device configuration templates
device-config:
  # Development template
  development:
    OSSUARY_LOG_LEVEL: "DEBUG"
    OSSUARY_DEBUG: "true"
    OSSUARY_API_AUTH_REQUIRED: "false"

  # Production template
  production:
    OSSUARY_LOG_LEVEL: "INFO"
    OSSUARY_DEBUG: "false"
    OSSUARY_API_AUTH_REQUIRED: "true"

  # Kiosk template
  kiosk:
    OSSUARY_KIOSK_URL: "https://your-dashboard.com"
    OSSUARY_KIOSK_WEBGL: "true"
    OSSUARY_KIOSK_REFRESH_INTERVAL: "3600"

# Resource limits
resources:
  # Memory limits
  memory:
    limit: "512Mi"
    request: "256Mi"

  # CPU limits
  cpu:
    limit: "1000m"
    request: "500m"

# Monitoring and alerting
monitoring:
  # Metrics collection
  metrics:
    enabled: true
    interval: 60

  # Log aggregation
  logging:
    level: "INFO"
    format: "json"
    max-size: "100Mi"
    max-files: 10

  # Alerting rules
  alerts:
    - name: "service-down"
      condition: "health_check_failed"
      action: "restart"

    - name: "high-memory"
      condition: "memory_usage > 80%"
      action: "log"

    - name: "disk-full"
      condition: "disk_usage > 90%"
      action: "cleanup"

# Deployment configuration
deployment:
  # Rollback configuration
  rollback:
    enabled: true
    max-revisions: 5

  # Blue-green deployment
  strategy:
    type: "rolling"
    max-unavailable: 0
    max-surge: 1

# Documentation links
documentation:
  - name: "Quick Start Guide"
    url: "https://github.com/yourusername/ossuary-pi/blob/main/docs/quickstart.md"

  - name: "Configuration Reference"
    url: "https://github.com/yourusername/ossuary-pi/blob/main/docs/configuration.md"

  - name: "Troubleshooting"
    url: "https://github.com/yourusername/ossuary-pi/blob/main/docs/troubleshooting.md"